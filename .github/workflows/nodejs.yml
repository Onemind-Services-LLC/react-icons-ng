name: Node.js CI

"on":
  - push
  - pull_request

env:
  GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
  NODE_AUTH_TOKEN: ${{ secrets.GIT_TOKEN }}
  NPM_TOKEN: ${{ secrets.GIT_TOKEN }}

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup NPMRC
        run: cp .npmrc.ci .npmrc

      - name: corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn --immutable

      - name: Formatter
        run: yarn format:ci

      - name: Lint
        run: yarn lint

      - name: Build Packages
        run: BASE_PATH=/react-icons-ng ./build-script.sh

      - uses: actions/upload-artifact@v4
        with:
          path: packages/_react-icons-ng*/*.tgz

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./packages/preview/out
        if: contains(github.ref, 'tags/')

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "packages/_react-icons-ng*/*.tgz"
          bodyFile: "packages/react-icons-ng/VERSIONS"
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ contains(github.ref, 'snapshot') }}
        if: contains(github.ref, 'tags/')

      - name: Publish react-icons-ng
        if: contains(github.ref, 'tags/')
        run: npm publish packages/_react-icons-ng/*.tgz

      - name: Publish react-icons-ng-pack
        if: contains(github.ref, 'tags/')
        run: npm publish packages/_react-icons-ng-pack/*.tgz
